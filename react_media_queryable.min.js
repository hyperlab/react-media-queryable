!function(e,t){"object"==typeof exports&&"object"==typeof module?module.exports=t(require("react")):"function"==typeof define&&define.amd?define(["react"],t):"object"==typeof exports?exports.MediaQueryable=t(require("react")):e.MediaQueryable=t(e.React)}(this,function(e){return function(e){function t(n){if(i[n])return i[n].exports;var r=i[n]={exports:{},id:n,loaded:!1};return e[n].call(r.exports,r,r.exports,t),r.loaded=!0,r.exports}var i={};return t.m=e,t.c=i,t.p="",t(0)}([function(e,t,i){e.exports=i(1)},function(e,t,i){var n=i(2),r=i(3);e.exports=n.createClass({displayName:"MediaQueryable",getInitialState:function(){return{mediaQuery:void 0}},componentDidMount:function(){new r(this.props.mediaQueries,this._onMediaQueryChange)},render:function(){if(void 0==this.state.mediaQuery)return null;var e=n.Children.map(this.props.children,function(e){return n.cloneElement(e,{mediaQuery:this.state.mediaQuery})}.bind(this));return n.DOM.div({children:e})},_onMediaQueryChange:function(e){this.setState({mediaQuery:e})}})},function(t,i,n){t.exports=e},function(e,t,i){function n(e,t){this.mediaQueries=e,this.changeHandler=t;var i;for(i in this.mediaQueries)this._setupMediaQuery(i)}n.prototype._setupMediaQuery=function(e){var t=window.matchMedia(this.mediaQueries[e]);return t.addListener(function(t){return this._handleMediaQueryChange(t.matches,e)}.bind(this)),this._handleMediaQueryChange(t.matches,e)},n.prototype._handleMediaQueryChange=function(e,t){return e?this.changeHandler(t):void 0},e.exports=n}])});
//# sourceMappingURL=react_media_queryable.js.map